# SpringCloud-Eureka学习中踩过的坑
1. 根据服务名调用，显示该服务无对应实例，当初`application.yml`配置的是`eureka.instance.appName: serviceName`。但根据这个服务名
来调用服务就是无法找到对应的服务实例。后来将配置改为`spring.application.name: serviceName`才找到了对应的服务。原因有时间细究。

2. 关于Openfeign调用Api时的请求转换问题：  
    现象是consumer在使用Openfeign调用provider的服务时，报了405错误，原因是请求方法错误。在provider这边暴露的接口是get方法，Openfeign调用的方法也是get方法。
    只不过是携带了一个int型的参数。provider这边日志看出consumer是以post请求来访问接口的，问题就是Openfeign在执行服务调用时改变了请求方式。
    原因：Openfeign底层使用HttpClient会将参数放在RequestBody中，这样get请求就会转换成post请求。
    解决方式：  
        1.在服务提供端采用`@PostMapping` + `@RequestBody`注解来接收请求 （不推荐，尤其是服务跨项目时，更改对方接口注解并不合理）  
        2.重写Openfeign的发送请求的实现，其实已经有人写好了，所以我们直接加个依赖即可，依赖如下:    
    ```xml
           <dependency>
               <groupId>io.github.openfeign</groupId>
               <artifactId>feign-httpclient</artifactId>
           </dependency>   
    ```
3. 关于SpringCloud Config在配置时无法加载bootstrap.yml文件的问题：
    首先引入spring-cloud-context的依赖包，这个依赖是spring-cloud来做上下文配置使用的
    ```xml
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-context</artifactId>
            </dependency>
    ```
    如果引入之后依然无法加载配置文件，去看一下是不是没有`spring.cloud.bootstrap.enabled`这个环境变量，如果这个变量为false或者没有，那么
    spring cloud 在检查配置文件时就不会加载`bootstrap.yml`的配置文件的。
    配置环境变量的方法：`Edit configurations`->`Enviroment`->`Enviroment varibles`添加即可
   


        
    